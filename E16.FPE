***************************************************
*
*        DEFINITION FILE FOR CONSTANTS USED TO CALL
*        THE iS FPE.
*
*        COPYRIGHT (C) 1988 BY INNOVATIVE SYSTEMS
*
***************************************************
;................................................................
;
;        This software is provided for your evaluation and to
;        assist you in developing software for an Apple II 6502
;        family computer which has an iS Floating Point Engine.
;
;        DISCLAIMER OF WARRANTY
;
;        THE SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF
;        ANY KIND, EITHER EXPRESS OR IMPLIED, WITH RESPECT TO
;        ITS MERCHANTABILITY OR ITS FITNESS FOR ANY PARTICULAR
;        PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND
;        PERFORMANCE OF THE SOFTWARE IS WITH YOU.  SHOULD THE
;        SOFTWARE PROVE DEFECTIVE, YOU (AND NOT INNOVATIVE
;        SYSTEMS OR AN INNOVATIVE SYSTEMS AUTHORIZED REPRESENTATIVE)
;        ASSUME THE ENTIRE COST OF ALL NECESSARY SERVICING, REPAIR
;        OR CORRECTION.
;
;        Innovative Systems does not warrant that the functions
;        contained in the Software will meet your requirements
;        or that the operation of the software will be
;        uninterrupted or error free or that defects in the
;        Software will be corrected.
;
;        SOME STATES DO NOT ALLOW THE EXCLUSION OF IMPLIED
;        WARRANTIES, SO THE ABOVE EXCLUSION MAY NOT APPLY TO
;        YOU.  THIS WARRANTY GIVES YOU SPECIFIC LEGAL RIGHTS
;        WHICH VARY FROM STATE TO STATE.
;
;................................................................
;FPEEqus  data
;
;       MC68881 OP CODES
;
FMOVE   GEQU     $00     MOVE
FINT    GEQU     $01     INTEGER PART
FSINH   GEQU     $02     SINH
FINTRZ  GEQU     $03     INTEGER PART (ROUND TO ZERO)
FSQRT   GEQU     $04     SQUARE ROOT
FLOGNP1 GEQU     $06     LOGN(1+X)
FETOXM1 GEQU     $08     ((E**X)-1))
FTANH   GEQU     $09     TANH
FATAN   GEQU     $0A     ARCTAN
FASIN   GEQU     $0C     ARCSIN
FATANH  GEQU     $0D     ARCTANH
FSIN    GEQU     $0E     SINE
FTAN    GEQU     $0F     TANGENT
FETOX   GEQU     $10     E**X
FTWOTOX GEQU     $11     2**X
FTENTOX GEQU     $12     10**X
FLOGN   GEQU     $14     LOGN
FLOG10  GEQU     $15     LOG10
FLOG2   GEQU     $16     LOG2
FABS    GEQU     $18     ABSOLUTE VALUE
FCOSH   GEQU     $19     COSH
FNEG    GEQU     $1A     NEGATE
FACOS   GEQU     $1D     COSINET
FGETEXP GEQU     $1E     GET EXPONENT
FGETMAN GEQU     $1F     GET MANTISSA
FDIV    GEQU     $20     DIVIDE
FMOD    GEQU     $21     MODULO REMAINDER
FADD    GEQU     $22     ADD
FMUL    GEQU     $23     MULTIPLY
FSGLDIV GEQU     $24     SINGLE DIVIDE
FREM    GEQU     $25     IEEE REMAINDER
FSCALE  GEQU     $26     SCALE EXPONENT
FSGLMUL GEQU     $27     SINGLE MULTIPLY
FSUB    GEQU     $28     SUBTRACT
FSINCOS GEQU     $30     SINE & COSINE SIMULTANEOUSLY
FCMP    GEQU     $38     COMPARE
FTST    GEQU     $3A     TEST
;
;
COMMAND   GEQU   $08
CONTROL   GEQU   $02
RESPONSE  GEQU   $00
OPERAND   GEQU   $0C
CONDITION GEQU   $0A
SAVE      GEQU   $04
RESTORE   GEQU   $06
MCONTROL  GEQU   $9000   MC68881 CONTROL REGISTER
MSTATUS   GEQU   $8800   MC68881 STATUS REGISTER
IADDRESS  GEQU   $8400   INSTRUCTION ADDRESS REGISTER
;
FP0     GEQU     $00     FLOATING POINT REGISTER #0
FP1     GEQU     $01
FP2     GEQU     $02
FP3     GEQU     $03
FP4     GEQU     $04
FP5     GEQU     $05
FP6     GEQU     $06
FP7     GEQU     $07
;
;        constants in ROM
;
FMOVEROM GEQU   $5C                      MOVE CONSTANT FROM ROM TO
;                                         REGISTER
RPI      GEQU   $00                      PI
RL102    GEQU   $0B                      LOG10(2)
REXP     GEQU   $0C                      E
RL2EXP   GEQU   $0D                      LOG2(E)
RL10EXP  GEQU   $0E                      LOG10(E)
RZERO    GEQU   $0F                      0.0
RLN2     GEQU   $30                      LOGN(2)
RLN10    GEQU   $31                      LOGN(10)
R10T0    GEQU   $32                      10^0
R10T1    GEQU   $33                      10^1
R10T2    GEQU   $34                      10^2
R10T4    GEQU   $35                      10^4
R10T8    GEQU   $36                      10^8
R10T16   GEQU   $37                      10^16
R10T32   GEQU   $38                      10^32
R10T64   GEQU   $39                      10^64
R10T128  GEQU   $3A                      10^128
R10T256  GEQU   $3B                      10^256
R10T512  GEQU   $3C                      10^512
R10T1024 GEQU   $3D                      10^1024
R10T2048 GEQU   $3E                      10^2048
R10T4096 GEQU   $3F                      10^4096
;
;        BIT DEFINITIONS IN MC68881 STATUS REGISTER
;
;        READ THIS REGISTER TO DETERMINE WHETHER AN
;        EXCEPTION HAS OCCURRED DURING FLOATING
;        POINT OPERATIONS.
;
;
;        >>>>byte 0 (Accrued Exception Byte) [Used for Halt]
;
INEX_FPU GEQU   8                        Inexact
DZ_FPU   GEQU   $10                      Divide by zero
UNFL_FPU GEQU   $20                      Underflow
OVFL_FPE GEQU   $40                      Overflow
IOP_FPE  GEQU   $80                      Invalid operation
;
;        >>>>byte 1 (Exception Status Byte) [Used for Exceptions]
;
INEX1_FPU GEQU  $100                     Inexact decimal input
INEX2_FPU GEQU  $200                     Inexact operation
DZ1_FPU   GEQU  $400                     Divide by zero
UNFL1_FPU GEQU  $800                     Underflow
OVFL1_FPU GEQU  $1000                    Overflow
OPERR_FPU GEQU  $2000                    Operand error
SNAN_FPU  GEQU  $4000                    Signalling NaN
;
;        >>>>byte 2 (Quotient Byte) [Used by MOD and REM]
;
SIGN_FPU GEQU   8                        sign of quotient
;
;        >>>>byte 3 (Condition Code Byte)
;
NAN_FPU  GEQU   $100                     Not A Number
INF_FPU  GEQU   $200                     Infinity
ZERO_FPU GEQU   $400                     Zero value
NEG_FPU  GEQU   $800                     Negative Value
;
;        BIT DEFINITIONS FOR MC68881 CONTROL REGISTER
;
;        WARNING:  USE OF THE EXCEPTION ENABLE BYTE ON THE
;                  MC68881 WILL CAUSE THE FPE TO DO
;                  UNPREDICTABLE ACTIONS.  DO NOT USE
;                  THE FPCR FOR ENABLING EXCEPTIONS.
;
;        >>>>>>byte 1 (Exception enable byte)
;
;    *** same as FPSR byte 1 definitions
;
;        >>>>>>byte 0 (Mode Control byte)
;
;        mask bits
;
RND2NR_FPU GEQU $00                     round to nearest
RND2Z_FPU  GEQU $10                         "     zero
RND2NI_FPU GEQU $20                        "     negative inf
RND2PI_FPU GEQU $30                        "     positive inf
;
PRE_FPU GEQU   $00                      rounding precision extended
PRS_FPU GEQU   $40                         "         "     single
PRD_FPU GEQU   $80                         "         "     double
;
;        >>>>>>bytes 2 and 3 not used
;
;         end
